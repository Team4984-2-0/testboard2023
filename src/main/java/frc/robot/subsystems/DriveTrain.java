// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.Robot;
import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.revrobotics.CANSparkMax; 
import com.revrobotics.CANSparkMaxLowLevel.MotorType;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private CANSparkMax leftBackMotor;
private CANSparkMax leftFrontMotor;
private MotorControllerGroup leftMotors;
private CANSparkMax rightBackMotor;
private CANSparkMax rightFrontMotor;
private MotorControllerGroup rightMotors;
private DifferentialDrive differentialDrive1;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftBackMotor = new CANSparkMax(4, MotorType.kBrushed);
 
 

leftFrontMotor = new CANSparkMax(3, MotorType.kBrushed);
 
 

leftMotors = new MotorControllerGroup(leftBackMotor, leftFrontMotor  );
 addChild("leftMotors",leftMotors);
 

rightBackMotor = new CANSparkMax(2, MotorType.kBrushed);
 
 

rightFrontMotor = new CANSparkMax(1, MotorType.kBrushed);
 
 

rightMotors = new MotorControllerGroup(rightBackMotor, rightFrontMotor  );
 addChild("rightMotors",rightMotors);
 

differentialDrive1 = new DifferentialDrive(leftMotors, rightMotors);
 addChild("Differential Drive 1",differentialDrive1);
 //differentialDrive1.setSafetyEnabled(true);
//differentialDrive1.setExpiration(0.1);
//differentialDrive1.setMaxOutput(1.0);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void drive(double leftDrive, double rightDrive)
    {
        // 
        Robot.printYellow(leftDrive + "," + rightDrive);
        differentialDrive1.tankDrive(leftDrive, rightDrive);
    }

    
}

