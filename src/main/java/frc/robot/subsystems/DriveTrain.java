// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Subsystem.

package frc.robot.subsystems;


import frc.robot.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj2.command.SubsystemBase;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.CounterBase.EncodingType;
import edu.wpi.first.wpilibj.Encoder;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;
import edu.wpi.first.wpilibj.motorcontrol.MotorControllerGroup;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class DriveTrain extends SubsystemBase {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
private Encoder leftFrontEncoder;
private Encoder rightFrontEncoder;
private WPI_TalonSRX leftFrontMotor;
private WPI_TalonSRX leftBackMotor;
private MotorControllerGroup leftMotors;
private WPI_TalonSRX rightFrontMotor;
private WPI_TalonSRX rightBackMotor;
private MotorControllerGroup rightMotors;
private DifferentialDrive drive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    
    /**
    *
    */
    public DriveTrain() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
leftFrontEncoder = new Encoder(0, 1, false, EncodingType.k4X);
 addChild("leftFrontEncoder",leftFrontEncoder);
 leftFrontEncoder.setDistancePerPulse(1.0);

rightFrontEncoder = new Encoder(2, 3, false, EncodingType.k4X);
 addChild("rightFrontEncoder",rightFrontEncoder);
 rightFrontEncoder.setDistancePerPulse(1.0);

leftFrontMotor = new WPI_TalonSRX(0);
 
 

leftBackMotor = new WPI_TalonSRX(1);
 
 

leftMotors = new MotorControllerGroup(leftFrontMotor, leftBackMotor  );
 addChild("leftMotors",leftMotors);
 

rightFrontMotor = new WPI_TalonSRX(2);
 
 

rightBackMotor = new WPI_TalonSRX(3);
 
 

rightMotors = new MotorControllerGroup(rightFrontMotor, rightBackMotor  );
 addChild("rightMotors",rightMotors);
 

drive = new DifferentialDrive(leftMotors, rightMotors);
 addChild("Drive",drive);
 drive.setSafetyEnabled(true);
drive.setExpiration(0.1);
drive.setMaxOutput(1.0);



    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void periodic() {
        // This method will be called once per scheduler run

    }

    @Override
    public void simulationPeriodic() {
        // This method will be called once per scheduler run when in simulation

    }

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

